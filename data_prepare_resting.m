% This script saves the time courses averaged for each region of interest 
% of the Harvard-Oxford Atlas to the matrix 'roiY' for each subject separately.
% The list of subjects is generated by 'allsub_all.m'.
% Requires SPM12: www.fil.ion.ucl.ac.uk/spm/software/spm12/
% and Tools for NIfTI and ANALYZE image: 
% https://www.mathworks.com/matlabcentral/fileexchange/8797-tools-for-nifti-and-analyze-image
% Path variables below should be set properly.

clear all

%% Initializing SPM

spmfolder = 'c:\projects\matlabtools\spm12';                % Path to SPM.
addpath(spmfolder)
addpath([spm('Dir'),'\external\fieldtrip\preproc\']);
spm('Defaults','FMRI')
spm_jobman('initcfg')

%% Basic settings (including path variables)

basename = 'sald';
rootpath = 'c:\projects\transfer_learning\SALD_spm\';       % Path to preprocessed data.
outpath = 'c:\projects\transfer_learning\roiwise_data\';    % Path to time course data.
run('allsub_all.m')

% Parameters

fwhm = 8;
preproc_prefix=sprintf('s%gwcr',fwhm);
reg_motion = 1;
reg_white = 1;
reg_ventric = 1;
reg_gray = 0;
reg_global = 1;
filter = 1;
numROI = 111;

%% Loading Harvard-Oxford Atlas and extracting ROI time courses

template = load_untouch_nii('harvard_oxford_full.nii');
vXYZi = [1:prod(template.hdr.dime.dim(2:4))]';
[x, y, z] = ind2sub(template.hdr.dime.dim(2:4),vXYZi);
vXYZ = [x y z]';
linTemplate = reshape(template.img,1,[]);
mask = find(linTemplate>0);
vXYZ_mask = vXYZ(:,mask);
linTemplate = linTemplate(:,mask);

templ = spm_vol('harvard_oxford_full.nii');
template_transform = templ.mat;

vXYZ_mask_mm = template_transform*[vXYZ_mask;ones(1,length(mask))];


for subnum=1:length(subnames)
    
    subname = subnames{subnum};
    disp(sprintf('%s',subname));
    
    coorf = [preproc_prefix basename '_sub' subname '_mot' ...
             num2str(reg_motion) '_white' num2str(reg_white) '_ventric' ...
             num2str(reg_ventric)  '_global' ...
             num2str(reg_global) '_filt' num2str(filter) '.nii'];
    
    load([rootpath subname '\process_resting\' coorf '_coor.mat']);

    niif = [preproc_prefix basename '_sub' subname '_rest.nii'];
    
    func = spm_vol([rootpath subname '\process\' niif]);

    funcspace=func(1);
    func_transform=funcspace.mat;
        
    vXYZ_mask_func=inv(func_transform)*vXYZ_mask_mm;
    vXYZ_mask_func=round(vXYZ_mask_func);
        
	load([rootpath subname '\process_resting\' coorf '_func.mat']);
                        
	roiY=zeros(size(Y,1),numROI);
    for roi=1:numROI
        roiIDs=find(linTemplate==roi);
        roiY(:,roi)=mean(Y(:,ismember(vXYZ',vXYZ_mask_func(1:3,roiIDs)','rows')),2);
    end
	roiY(isnan(roiY))=0;

    save([outpath subname 'resting_roiwise.mat'], 'roiY')

end
